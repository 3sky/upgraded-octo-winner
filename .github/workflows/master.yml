name: Build from master

on:
  push:
    branches:
      - master

env:
  STG_SERVICE: "staging-awesome-clojure-api"
  STG_URL: "https://staging-awesome-clojure-api-jsrwhbaamq-ew.a.run.app"
  PROD_SERVICE: "prod-awesome-clojure-api"
  PROD_URL: "https://prod-awesome-clojure-api-jsrwhbaamq-ew.a.run.app"
  APP_NAME: "clojure-app"

jobs:
  build-the-app:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup GCP
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '281.0.0'
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: auth to CR
      run: gcloud auth configure-docker
    - name: build app
      run: docker build . -t $APP_NAME
    - name: tag app
      run: docker tag $APP_NAME gcr.io/${{ secrets.PROJECT_ID }}/$APP_NAME:${{ github.sha }}           
    - name: push image
      run: docker push gcr.io/${{ secrets.PROJECT_ID }}/$APP_NAME:${{ github.sha }}

  deploy-to-stg:
    needs: build-the-app
    runs-on: ubuntu-latest
    steps:
    - name: update prod
      uses: 3sky/furry-octo-parakeet@master
      with:
        auth_file: ${{ secrets.GCP_SA_KEY }}
        action: 'update'
        name: ${{ env.STG_SERVICE }}
        region: 'europe-west1'
        image: "gcr.io/${{ secrets.PROJECT_ID }}/${{ env.APP_NAME }}:${{ github.sha }}"
    - name: Check STG
      uses: 3sky/glowing-spoon@v0.0.1
      with:
        hostname: ${{ env.STG_URL }}
        path: 'status'
        filter: '.status'
        expected: 'ok'

  deploy-to-prod:
    needs: [build-the-app, deploy-to-stg]
    runs-on: ubuntu-latest
    steps:
    - name: update prod
      uses: 3sky/furry-octo-parakeet@master
      with:
        auth_file: ${{ secrets.GCP_SA_KEY }}
        action: 'update'
        name: ${{ env.PROD_SERVICE }}
        region: 'europe-west1'
        image: "gcr.io/${{ secrets.PROJECT_ID }}/${{ env.APP_NAME }}:${{ github.sha }}"
    - name: Check PROD
      uses: 3sky/glowing-spoon@v0.0.1
      with:
        hostname: ${{ env.PROD_URL }}
        path: 'status'
        filter: '.status'
        expected: 'ok'

  send-notification:
    needs: [build-the-app, deploy-to-stg, deploy-to-prod]
    runs-on: ubuntu-latest
    steps:
    - name: test telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Build number ${{ github.run_number }} of ${{ github.repository }} is complete ;)